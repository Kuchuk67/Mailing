# Generated by Django 5.1.5 on 2025-01-29 14:36

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClientName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(max_length=150, verbose_name='email клиента')),
                ('name', models.CharField(max_length=150, verbose_name='Фамилия Имя Отчество')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('unsubscribe', models.IntegerField(default=None, verbose_name='Отписка')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title_mail', models.CharField(max_length=150, verbose_name='Тема письма')),
                ('text_mail', models.TextField(verbose_name='Текст mail')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='дата последнего изменения')),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщении',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EmailForSend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(default='c#5p==ctr478ym&+&%qhhs6-d*zdcfes72zx#c*8#f1%)e_+ux', max_length=50)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='mailing.clientname')),
            ],
        ),
        migrations.CreateModel(
            name='Attempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempt_at', models.DateTimeField(auto_now_add=True, verbose_name='время рассылки')),
                ('success', models.BooleanField(verbose_name='статус операции')),
                ('response', models.CharField(max_length=250, verbose_name='ответ сервера')),
                ('email_for_send', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mail_for_send', to='mailing.emailforsend')),
            ],
            options={
                'verbose_name': 'Попытка',
                'verbose_name_plural': 'Попытки',
                'ordering': ['-attempt_at'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_at', models.DateTimeField(verbose_name='время начала рассылки')),
                ('end_at', models.DateTimeField(verbose_name='время завершения рассылки')),
                ('status', models.CharField(choices=[('stop', 'Остановлена'), ('end', 'Завершена'), ('created', 'Создана'), ('start', 'Запущена')], default='stop', max_length=10)),
                ('message', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='message', to='mailing.message')),
            ],
            options={
                'verbose_name': 'Задача',
                'verbose_name_plural': 'Задачи',
                'ordering': ['-start_at'],
            },
        ),
        migrations.AddField(
            model_name='emailforsend',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='mailing.task'),
        ),
    ]
